{"ast":null,"code":"var _jsxFileName = \"/Users/natasha.s.binti.amin/Documents/portfolio/dark-light/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { themeContext, themes } from './context/themeContext';\nimport ToggleDark from './component/toggleDark';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [darkMode, setDarkMode] = React.useState(true);\n\n  const wave = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toggleContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-warning\",\n      children: \"Dark/Light mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(themeContext.Consumer, {\n      children: _ref => {\n        let {\n          changeTheme\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(ToggleDark, {\n          toggleDark: () => {\n            setDarkMode(!darkMode);\n            changeTheme(darkMode ? themes.light : themes.dark);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"U9cQrERlY+h8pHe8i/lj95QawrI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/natasha.s.binti.amin/Documents/portfolio/dark-light/src/App.js"],"names":["React","themeContext","themes","ToggleDark","App","darkMode","setDarkMode","useState","wave","changeTheme","light","dark"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,wBAArC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,KAAK,CAACO,QAAN,CAAe,IAAf,CAAhC;;AAEA,QAAMC,IAAI,GAAG,MAAM,CAAE,CAArB;;AAEA,sBACG;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACA;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,YAAD,CAAc,QAAd;AAAA,gBACG;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,4BACC,QAAC,UAAD;AACE,UAAA,UAAU,EAAE,MAAM;AAChBH,YAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAI,YAAAA,WAAW,CAACJ,QAAQ,GAAGH,MAAM,CAACQ,KAAV,GAAkBR,MAAM,CAACS,IAAlC,CAAX;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,gBADD;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAeA;;GApBuBP,G;;KAAAA,G","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { themeContext, themes } from './context/themeContext';\nimport ToggleDark from './component/toggleDark';\n\nexport default function App() {\n\tconst [darkMode, setDarkMode] = React.useState(true);\n\n\tconst wave = () => {};\n\n\treturn (\n    <div className=\"toggleContainer\">\n    <h1 className=\"text-warning\">Dark/Light mode</h1>\n    <themeContext.Consumer>\n      {({ changeTheme }) => (\n        <ToggleDark\n          toggleDark={() => {\n            setDarkMode(!darkMode);\n            changeTheme(darkMode ? themes.light : themes.dark);\n          }}\n        />\n      )}\n    </themeContext.Consumer>\n  </div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}