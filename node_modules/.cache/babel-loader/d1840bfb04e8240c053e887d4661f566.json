{"ast":null,"code":"var _jsxFileName = \"/Users/natasha.s.binti.amin/Documents/portfolio/dark-light/src/context/themeContextWrapper.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { themes, themeContext } from './themeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThemeContextWrapper(props) {\n  _s();\n\n  const [theme, setTheme] = useState(themes.dark);\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  console.log(props, \"ppp\");\n  useEffect(() => {\n    console.log(theme, \"ppp\");\n\n    switch (theme) {\n      case theme.light:\n        document.body.classList.add('white-content');\n        break;\n\n      case theme.dark:\n      default:\n        document.body.classList.remove('white-content');\n        break;\n    }\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(themeContext.Provider, {\n    value: {\n      theme: theme,\n      changeTheme: changeTheme\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ThemeContextWrapper, \"81LJbYGtqjdO775TVdpnETOnTlU=\");\n\n_c = ThemeContextWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeContextWrapper\");","map":{"version":3,"sources":["/Users/natasha.s.binti.amin/Documents/portfolio/dark-light/src/context/themeContextWrapper.jsx"],"names":["React","useState","useEffect","themes","themeContext","ThemeContextWrapper","props","theme","setTheme","dark","changeTheme","console","log","light","document","body","classList","add","remove","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,gBAArC;;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAClD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACE,MAAM,CAACM,IAAR,CAAlC;;AAEA,WAASC,WAAT,CAAqBH,KAArB,EAA4B;AAC3BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACA;;AAEEI,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAkB,KAAlB;AAEHJ,EAAAA,SAAS,CACR,MAAM;AACIS,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAkB,KAAlB;;AACT,YAAQA,KAAR;AACC,WAAKA,KAAK,CAACM,KAAX;AACCC,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,eAA5B;AACA;;AACD,WAAKV,KAAK,CAACE,IAAX;AACA;AACCK,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,eAA/B;AACA;AAPF;AASA,GAZO,EAaR,CAACX,KAAD,CAbQ,CAAT;AAgBA,sBACC,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,WAAW,EAAEA;AAA7B,KAA9B;AAAA,cACEJ,KAAK,CAACa;AADR;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;;GA9BuBd,mB;;KAAAA,mB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { themes, themeContext } from './themeContext';\n\nexport default function ThemeContextWrapper(props) {\n\tconst [theme, setTheme] = useState(themes.dark);\n\n\tfunction changeTheme(theme) {\n\t\tsetTheme(theme);\n\t}\n\n    console.log(props,\"ppp\")\n\n\tuseEffect(\n\t\t() => {\n            console.log(theme,\"ppp\")\n\t\t\tswitch (theme) {\n\t\t\t\tcase theme.light:\n\t\t\t\t\tdocument.body.classList.add('white-content');\n\t\t\t\t\tbreak;\n\t\t\t\tcase theme.dark:\n\t\t\t\tdefault:\n\t\t\t\t\tdocument.body.classList.remove('white-content');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\t[theme]\n\t);\n\n\treturn (\n\t\t<themeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\n\t\t\t{props.children}\n\t\t</themeContext.Provider>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}